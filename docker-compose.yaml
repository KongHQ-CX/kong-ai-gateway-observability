services:
  kong:
    image: kong:3.8
    volumes:
      - ./kong.yaml:/etc/kong/kong.yaml
    environment:
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yaml
      - KONG_DATABASE=off
      - OPENAI_AUTH_HEADER
    ports:
      - 8000:8000
    networks:
      - kong-net

  elasticsearch:
    image: elasticsearch:7.17.25
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - test_data:/usr/share/elasticsearch/data/
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
    networks:
      - kong-net

  logstash:
    image: logstash:7.17.22
    container_name: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml
      - ls_data:/usr/share/logstash/data
    networks:
      - kong-net
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.17.25
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
      - kb_data:/usr/share/kibana/data
    networks:
      - kong-net
    depends_on:
      - elasticsearch
  
  import:
    image: quay.io/curl/curl:latest
    container_name: import
    entrypoint:
      - /bin/sh
      - '-c'
      - |
          URL=http://kibana:5601
          status_code=$$(curl --write-out %{http_code} --silent --output /dev/null $$URL/app/home)
          echo $$status_code
          sleep 2
          while [ $$status_code -ne 200 ]
          do
            status_code=$$(curl --write-out %{http_code} --silent --output /dev/null $$URL/app/home)
            echo $$status_code
            sleep 2
          done
          cat > /tmp/indexpattern.json << EOF
          {
            "attributes": {
              "title": "ecs-*",
              "timeFieldName": "@timestamp"
            }
          }
          EOF
          curl -X POST \
            -H "kbn-xsrf: true" \
            --form file=@/dashboards/kong.ndjson \
            'http://kibana:5601/api/saved_objects/_import?overwrite=true'
          echo '> Kibana is bootstrapped'
    networks:
      - kong-net
    volumes:
      - "./dashboards:/dashboards"
    depends_on:
    - kibana
    - elasticsearch

networks:
  kong-net:
    driver: bridge

volumes:
  test_data:
  ls_data:
  kb_data:
